/*******************************************************************************
*
* Copyright 2019 Stefan Majewsky <majewsky@gmx.net>
*
* This program is free software: you can redistribute it and/or modify it under
* the terms of the GNU General Public License as published by the Free Software
* Foundation, either version 3 of the License, or (at your option) any later
* version.
*
* This program is distributed in the hope that it will be useful, but WITHOUT ANY
* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
* A PARTICULAR PURPOSE. See the GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License along with
* this program. If not, see <http://www.gnu.org/licenses/>.
*
*******************************************************************************/

package core

import (
	"fmt"

	goldap "gopkg.in/ldap.v3"
)

//User represents a single user account.
type User struct {
	LoginName  string `json:"login_name"`
	GivenName  string `json:"given_name"`
	FamilyName string `json:"family_name"`
	//PasswordHash must be in the format generated by crypt(3).
	PasswordHash string `json:"password"`

	Engine Engine `json:"-"`
}

func (u User) connect(e Engine) User {
	u.Engine = e
	return u
}

//IsEqualTo implements the Entity interface.
func (u User) IsEqualTo(other Entity) bool {
	lhs := u
	rhs, ok := other.(User)
	if !ok {
		return false
	}

	lhs.Engine = nil
	rhs.Engine = nil
	return lhs == rhs
}

//RenderToLDAP implements the Entity interface.
func (u User) RenderToLDAP(suffix string) goldap.AddRequest {
	//TODO: make this a posixAccount (requires attributes uidNumber, gidNumber, homeDirectory; optional attributes loginShell, gecos, description)
	return goldap.AddRequest{
		DN: fmt.Sprintf("uid=%s,ou=users,%s", u.LoginName, suffix),
		Attributes: []goldap.Attribute{
			mkAttr("uid", u.LoginName),
			mkAttr("cn", u.GivenName+" "+u.FamilyName), //TODO: allow flipped order (family name first)
			mkAttr("sn", u.FamilyName),
			mkAttr("givenName", u.GivenName),
			mkAttr("userPassword", u.PasswordHash),
			mkAttr("objectClass", "inetOrgPerson", "organizationalPerson", "person", "top"),
		},
	}
}
