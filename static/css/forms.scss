@mixin invisible-checkbox {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  display: none;
  margin: 0;
  padding: 0;
}

@mixin stack($gap) {
  // Arranges for all children to be separated by the same distance, `$gap`, in
  // such a way that children can also use the same layout (with a different
  // gap) inside them.
  //
  // Source: <https://every-layout.dev/layouts/stack/>
  & > * {
    margin: 0;
  }
  & > * + * {
    margin-top: $gap;
  }
}

form {
  @include stack(0.5rem);

  .row-label {
    display: block;
    font-size: 0.8rem;

    span.form-error {
      padding-left: 0.2rem;
      color: red;
    }
  }

  .row-input, div.row-value {
    display: block;
    width: 100%;

    &:not(.item-list) {
      padding: 0 0.5rem;
      border: 1px solid #CCC;
      border-radius: 3px;
      font-size: 0.8rem;
      line-height: 1.6rem;
      height: 1.6rem;
    }
  }

  input.row-input {
    &:hover {
      border-color: #999;
    }
    &:active, &:focus {
      border-color: #333;
    }

    &.form-error {
      border-color: #C00;
      background: #FCC;
      &:hover {
        border-color: #900;
      }
      &:active, &:focus {
        border-color: #300;
      }
    }
  }

  div.display-row div.row-value:not(.item-list) {
    background: #EEE;
  }

  div.item-list {
    .item {
      display: inline-block;

      margin-right: 0.5rem;
      padding: 0 0.5rem;
      border: 1px solid #CCC;
      border-radius: 3px;
      font-size: 0.8rem;
      line-height: 1.6rem;
      height: 1.6rem;

      &:before {
        color: inherit;
        padding-right: 0.3rem;
      }
    }

    .item.item-checked, input:checked + label.item {
      background: #EEE;
      &:before {
        display: inline;
        content: "\2611";
      }
    }

    .item.item-unchecked, input:not(:checked) + label.item {
      &:before {
        display: inline;
        content: "\2610";
      }
    }

    input[type=checkbox] {
      @include invisible-checkbox;
      &:active, &:focus {
        & + label.item {
          border-color: #333;
        }
      }
    }

    &:not(.item-list-readonly) label.item {
      cursor: pointer;
    }
  }

  input.for-fieldset[type=checkbox] {
    @include invisible-checkbox;

    &:checked + fieldset > label:first-child:before {
      display: inline;
      content: "\2611";
    }

    &:not(:checked) + fieldset > label:first-child:before {
      display: inline;
      content: "\2610";
    }

    &:not(:checked) + fieldset > * + * {
      display: none;
    }
  }

  fieldset {
    @include stack(0.5rem);
    border: 0;
    padding: 0 0 0 1rem;

    & > label:first-child {
      position: relative;
      top: 0.2rem;
      left: -1rem;
      display: block;
      margin: 0;
      padding: 0;

      cursor: pointer;
      font-size: 1.2rem;
      font-weight: bold;

      &:before {
        padding-right: 0.3rem;
      }
    }
  }

  div.button-row {
    margin-top: 1rem;
  }
}
